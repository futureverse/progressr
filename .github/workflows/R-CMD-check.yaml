on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'devel'    }
          - {os: windows-latest, r: 'release'  }
#          - {os: macOS-latest,   r: 'devel'    }
#          - {os: macOS-latest,   r: 'release'  }
#          - {os: macOS-latest,   r: 'oldrel'   }
          - {os: ubuntu-latest,  r: 'devel'    }
          - {os: ubuntu-latest,  r: 'devel'    , req_suggests: false, label: '!req_suggests' }
          - {os: ubuntu-latest,  r: 'release'  }
          - {os: ubuntu-latest,  r: 'oldrel'   }
          - {os: ubuntu-latest,  r: 'oldrel-1' }
          - {os: ubuntu-latest,  r: 'oldrel-2' }
          - {os: ubuntu-latest,  r: '4.1'      }
#          - {os: ubuntu-latest,  r: '3.6'      } ## optional 'ntfy' requires R (>= 4.1), but triggers an error
          - {os: ubuntu-latest,  r: 'release'  , language: ko,    label: ko    }
          - {os: ubuntu-latest,  r: 'release'  , language: zh_CN, label: zh_CN }
          - {os: ubuntu-latest,  r: 'release'  , language: zh_TW, label: zh_TW }
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## Test in other locale (optional)
      LANGUAGE: ${{ matrix.config.language }}
      ## R CMD check
      _R_CHECK_SUGGESTS_ONLY_: ${{ matrix.config.req_suggests || 'true' }}
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_THINGS_IN_TEMP_DIR_: true
      ## R (>= 4.4.0) Note, no trailing underscore (sic!)
      _R_COMPARE_LANG_OBJECTS: eqonly
      
    steps:
      - uses: actions/checkout@v4

      - name: R env vars
        run: |
          env | grep -E "^(_R_|R_)"
        
      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y tidy

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Install itself (to build vignettes)
        run: |
          install.packages(".", repos=NULL, type="source")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          capabilities()
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          ## Verify LANGUAGE settings by generating a translatable error
          cat(sprintf("LANGUAGE=%s\n", sQuote(Sys.getenv("LANGUAGE"))))
          cat(sprintf("locales: %s\n", sQuote(Sys.getlocale())))
          tryCatch(log("a"), error = conditionMessage)
          cat("R-specific environment variables:\n")
          envs <- Sys.getenv()
          envs <- envs[grep("^(_R_|R_)", names(envs))]
          print(envs)
        shell: Rscript {0}

      - name: Check (!Windows)
        if: runner.os != 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            args = "--as-cran",
            error_on = "note",
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Check (Windows)
        if: runner.os == 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"),
            error_on = "note",
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
